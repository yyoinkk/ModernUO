using System;
using Server.Targeting;
using System.Collections.Generic;

namespace Server.Spells.Dark
{
    public class VulnerabilitySpell : DarkSpell, ITargetingSpell<Mobile>
    {
        private static readonly SpellInfo _info = new(
            "Vulnerability",
            "An Sanct",
            203,
            9051,
            Reagent.Bloodmoss,
            Reagent.FertileDirt
        );

        public VulnerabilitySpell(Mobile caster, Item scroll) : base(caster, scroll, _info)
        {
        }

        public override SpellCircle Circle => SpellCircle.Third;

        private static readonly HashSet<Mobile> _table = new();

        public override void OnCast()
        {
            Caster.Target = new SpellTarget<Mobile>(this, TargetFlags.Harmful);
        }

        public void Target(Mobile m)
        {
            if (CheckHSequence(m))
            {
                if (!HasEffect(m))
                {
                    SpellHelper.Turn(Caster, m);

                    SpellHelper.CheckReflect((int)Circle, Caster, ref m);

                    //10 base + Eval / 15       // max 25 for now
                    var resistLoss = -(Math.Clamp((int)(GetDamageSkill(Caster) / 12), 0, 15) + 10);
                    var duration = SpellHelper.GetDuration(Caster, m, true);

                    Caster.SendMessage($"To lost: {resistLoss}, duration {duration.ToString(@"mm\:ss")}s.");

                    var physResMod = new ResistanceMod(ResistanceType.Physical, "Vulnerability", resistLoss, m);

                    _table.Add(m);
                    m.AddResistanceMod(physResMod);
                    Timer.StartTimer(duration, () => ClearEffect(m));

                    m.FixedParticles(0x37B9, 10, 25, 5016, EffectLayer.CenterFeet);
                    m.PlaySound(0x2A1);

                }
                else if (m == Caster)
                {
                    Caster.SendLocalizedMessage(502173); // You are already under a similar effect.
                }
                else
                {
                    Caster.SendLocalizedMessage(501775); // This spell is already in effect.
                }

                HarmfulSpell(m);
            }
        }

        public static void ClearEffect(Mobile m)
        {
            if (HasEffect(m))
            {
                _table.Remove(m);
                m.RemoveResistanceMod("Vulnerability"); // 3000546 - Vulnerable
                m.SendLocalizedMessage(1113375); // You suddenly feel less vulnerable!
            }
        }

        public static bool HasEffect(Mobile m) => _table.Contains(m);
    }
}
